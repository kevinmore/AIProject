Release Notes for AI Behaviors Made Easy


=====================================================
Version 1.8
=====================================================

Features:
------------

Added a new script (CachePlayerTagsOnAwake) that can be added to a spawnable player (or the like) so the newly spawned player will be recognized AIs.
Added boxes around groups of items in the inspector to make editing a easier


Fixes:
------------

Fixed a possible null reference exception when assigning patrol points through the API.


Changes:
------------

The AI and the targets it's looking for are now automatically ignored when raycasting.
- This affects triggers like LineOfSight and NoPlayerInSight and anything that calls the GetClosestPlayerInSight method
Updated the JS examples to be updated and have a cleaner method for using them.


=====================================================
Version 1.7.8
=====================================================

Features:
------------

Added an ExcludeFromStatesList attribute that can be added to a state in case you want it to not show up in the states dropdown. This is useful in cases such as Mock states for Unit Testing.


Changes:
------------

Added overridable methods to AIBehaviors, BaseState and BaseTrigger called CreateObjectFinder so a custom object finder can be used
TaggedObjectFinder now has an overridable method 'GetGameObjectsWithTag' to pass an array of GameObjects by tag. This can be used if you need to use a custom tagging system apart from Unity's.
BaseState and BaseTrigger now define a field "ownsObjectFinder" if it is a root of using Custom Tags
Made TaggedObjectFinder.CacheTransforms a virtual method

Fixes:
------------

Added a check in MoveAgent to see if the navMeshAgent is enabled before setting the destination since it logs an error
Fixed an error in the PatrolState.SetPatrolPoints method where it was looking at the current patrol point array size instead of the new one


=====================================================
Version 1.7.7
=====================================================

Changes:
------------

Low and High Health Triggers now derive from the base class HealthTrigger.
Removed several variables that weren't being used.
Updated the Triggers GUI to have compile flags to tell the difference between Unity 4.3 and future versions of the Undo.RegisterFullObjectHierarchyUndo method.


=====================================================
Version 1.7.6
=====================================================

Features:
------------

Added the ability for an AI in the IdleState to rotate toward its' target.


=====================================================
Version 1.7.5
=====================================================

Features:
------------

Added a maxHealth variable to the main AIBehaviors script.
Added an AddSubTrigger method to the BaseTrigger class.
Added a parentTrigger variable to the BaseTrigger class.
Abstracted distance checking in the Patrol state into a virtual method "CheckIfWithinThreshold" so that it can be overriden for things such as when 2D characters are at different Z values but using the same patrol path.

Changes:
------------

Made the editor Gui more friendly to setting up an AI on the fly through code.
Removed some debug statements from AIBehaviorsAnimationEditorGUI.


Fixes:
------------

AI will no longer allow a transition from a trigger if the transition state is null.


=====================================================
Version 1.7.4
=====================================================

Changes:
------------

Made each AI component derive from SavableComponent which gives each AI a unique id when GetSaveID() is called.


Fixes:
------------

Fixed a bug where 'Auto' for animation states wasn't working properly.


=====================================================
Version 1.7.3
=====================================================

Changes:
------------

Moved “CurrentStateTrigger” into the AIBehavior namespace


Fixes:
------------

Fixed a possible null reference exception in the AttackState


=====================================================
Version 1.7.2
=====================================================

Changes:
------------

Added a check if the Animation component is set to AlwaysAnimate in the AttackState so it will continue to use the animation’s time instead of approximating it.


=====================================================
Version 1.7.1
=====================================================

Changes:
------------

Wrapped the Editor classes in compiler flags in case they are moved into the Plugins folder.


Fixes:
------------

Fixed an issue in the AttackState where an AI wouldn’t attack if it had a skinned mesh renderer that wasn’t visible in a camera. When not visible it now calculates it’s own normalized time based on the animation that would have been playing.
Fixed an issue where an AI was unable to be damaged when calling AIBehaviors.GotHit instead of just blocking from going into the GotHit state.


=====================================================
Version 1.7
=====================================================

Features:
------------

Added a new trigger for detecting if the AI is in a state or not.


Fixes:
------------

The follow state's last sighted position is now set initially to the AI's position in case a player can't be sighted. It was defaulting to the world origin.
Fixed a bug where Undo would cause errors after a trigger was changed.


=====================================================
Version 1.6.9
=====================================================

Features:
------------

Added a simple Spaceship example to the project.
Dead State now has a destroy timer on it, if it's set above 0 it will be destroyed after X secs of coming into the dead state.
Added tooltips for the high and low health triggers for better understanding on the user's end.


=====================================================
Version 1.6.8
=====================================================

Fixes:
------------

Fixed a freeze bug in the InPlayerViewTrigger


=====================================================
Version 1.6.7
=====================================================

Fixes:
------------

State cooldowns no longer initialize values when the cool down is persistent when leaving the state. This was most evident when animations wouldn’t change, but affected other things as well.


Changes:
------------

Created an abstract CooldownableState that all cooldownable states derive from, thus, Cooldown options are no longer included in states that don’t use cooldowns.


=====================================================
Version 1.6.6
=====================================================

Features:
------------

Added an additional SetPatrolPoints method to the Patrol State that allows you to pass in an array of points instead of just a parent.


Changes:
------------

Added the Follow State back in, but it's no longer included in the initial setup.
The Patrol State resets the patrol when adding new points due to the possiblity of a null reference exception.


=====================================================
Version 1.6.5
=====================================================

Features:
------------

Added a default Auto option to the Animation type drop down so the user doesn’t have to choose between Legacy and Mecanim.
Added a Random option to the Patrol state for both Patrol Mode and Continue Previous Patrol Mode.


Changes:
------------

Removed the Follow state since all of its' behavior can be replicated via states and triggers.


=====================================================
Version 1.6.4
=====================================================

Fixes:
------------

Fixed a potential arguement out of range exception when removing cached tagged objects from the scene.
Excluded abstract classes from State and Trigger options which would cause null references when added.


=====================================================
Version 1.6.3
=====================================================

Features:
------------

Added a selection mode for the beyond and within distance triggers to be able to handle multiple tagged objects (Default, Any, All)
- Default: (Any for Within, All for Beyond)
- Any: Any tagged object can be within/beyond distance to be true
- All: All tagged objects must be within/beyond distance to be true

Added the logical result to the within/beyond triggers when no tagged objects exist
- Beyond returns true
- Within returns false


Fixes:
------------

Fixed a typo in the InPlayerViewTrigger where it was using the x coordinate instead of the y
Fixed a potential null reference exception in the TaggedObjectFinder if a Game Object was destroyed


=====================================================
Version 1.6.2
=====================================================

Fixes:
------------

Fixed Global trigger custom tags not being initialized properly


=====================================================
Version 1.6.1
=====================================================

Changes:
------------

Reuploaded to the Asset Store using Unity 4.3 instead of 4.3.2 for compatibility reasons


=====================================================
Version 1.6.0
=====================================================

Features:
------------

Added a custom tags system for both states and triggers


Changes:
------------

BaseState and BaseTrigger Awake methods are virtual and must be called if overridden
	- otherwise the tagged objects will not be found when using custom tags


Fixes:
------------

Triggers were not being deleted when being swapped out with another trigger


=====================================================
Version 1.5.1
=====================================================

Changes:
------------

Any override for the Trigger method DrawInspectorProperties must now also include AIBehaviors fsm as well
	Example: public override void DrawInspectorProperties(AIBehaviors fsm, SerializedObject sObject)
Made the GoToRandomState trigger Editor GUI more useable
Added the CharacterAnimator component to the Astar setup menu item.
Changed AI Behaviors to correctly say AI Behavior in the about menu item and window

=====================================================
Version 1.5.0
=====================================================

Features:
------------

Added the ability to filter the within and beyond distance triggers by tagged objects.
Added the ability to use a separate transform for the AI’s sight.

Fixes:
------------

Fixed a drawing bug with the attack state.

Changes:
------------

Made it so the Attack Animations foldout only allows one animation.


=====================================================
Version 1.4.9
=====================================================

Features:
------------

Added a menu option for an Astar Pathfinding Project setup

Changes:
------------

The attack animation for both Legacy animation and Mecanim now use the first animation in the Animations foldout instead of a state specific animation.


=====================================================
Version 1.4.8
=====================================================

Fixes:
------------

Rebaked NavMeshes in the example scenes.


=====================================================
Version 1.4.7
=====================================================

Fixes:
------------

Updated the Report A Bug menu to exclude the subject because some mail apps would fail to launch if it was there.


=====================================================
Version 1.4.6
=====================================================

Fixes:
------------

Ensured certain animations were included in the Asset Store that were causing the Mecanim scenes to break.
Fixed a bug in the DefendState editor that would allow it to use the callbacks if the component was in a namespace.
Modded the animations in the AttackState to one since the normalized values now go past 1.0
The shooter script now uses Camera.main instead of Camera.current since Camera.current is returning null
Made the shooter start a little farther out so it doesn't hit the player himself.

Changes:
------------

Updated all State example scenes
Removed several scenes that were mostly causing clutter


=====================================================
Version 1.4.5
=====================================================


Features:
-----------
Added Global Triggers to each AI
Added a new IsAliveTrigger
Added Mecanim support
Added HTML documentation for code and video tutorials
Added a new demo scene


Improvements:
-----------
Wrapped all AIBehavior specific classes into namespaces


Fixes:
-----------
Fixed several menu item issues


=====================================================
Version 1.4.3
=====================================================

Fixes:
-----------
Reverted project to Unity 4.1.5 because the previous release was uploaded with a beta version.


=====================================================
Version 1.4.2
=====================================================

Fixes:
-----------
The Init method on SubTriggers wasn't being called as it should have, producing incorrect results for some triggers such as the Timer trigger.


=====================================================
Version 1.4.1
=====================================================

*** Now Requires Unity 4 ***

Improvements:
-----------

Added a target and the attacking state into the AttackData structure.
Attack is now a virtual method that can be overridden if the AttackState is derived from.
The Attack state has a new reload system since the old one was broken. Now once it reaches a certain number of attacks it will change to whatever state is chosen. It chooses the attack state it comes from by default until one is chosen.
There is now some initial ground work for getting Mecanim working.


Fixes:
-----------

Fixed a bug where GetClosestPlayer was using sqrSightDistance instead of sqrDistance.
Fixed a bug with the animation code sample.
Added a flag for if a class has movement options or not (for editor code).


Changes:
-----------

Changed the version number to 1.4.1 because adding nested triggers should have been called version 1.4… oops



=====================================================
Version 1.3.8
=====================================================

Improvements:
-----------

Added a nested triggers system


Changes:
-----------

Updated the Attack state so that it doesn't draw the animations foldout.


=====================================================
Version 1.3.7
=====================================================

Fixes:
-----------

Added a null check to make sure there's an animation state to send to the animation callback.
Added the public keyword to the CodeSampleGUI since you need a method to be public in order to use it.
Fixed a bug where the "Distance To Target Threshold" for the seek state wasn't being calculated.
Put DestroyImmediate in edit mode and Destroy when the game is playing for the idle state.
Dead state now passes the AI's transform instead of its' position so that it won't rotate.
Fixed a NaN rotation error if the Time.deltaTime value was zero.
Fixed a Null Reference Exception in the PatrolState if Init is called before Awake.
Fixed an issue where the agent would rotate toward the player even when in something like the seek state


Improvements:
-----------

Added the scripts from the Unity Example Mecanim scenes and made slight modifications to work with AI Behaviors.
Added damageMultiplier to the AIBehaviors class so when the GotHit method is called it can take the raw damage value and increase or decrease it.
Added an overrideable "CanGetHit" method to the GotHit state to see if it can be changed to. This only applies when calling "GotHit" on the main AIBehaviors script.
Added pitch and optional pitch randomness to the audio when played.
Added a previousState field to the main AIBehaviors script.


Changes:
-----------

Made the AIBehaviors generic GetState and GetStates methods return derived types instead of just the exact type.
Can now use an external move delegate in 'addition to' the NavMeshAgent and not 'instead of'.
The Defend state now locks the player into position when it is running.
Added SendMessageOptions.DontRequireReceiver to the GetHelpState "OnGetHelp" callback.


=====================================================
Version 1.3.6
=====================================================

Fixes:
-----------

Fixed a null reference bug when a nav mesh agent is not present in the GotHit method.

Fixed a bug where triggers were not being deleted when a state was deleted.


Changes:
-----------

Removed Legacy Upgrade system


=====================================================
Version 1.3.5
=====================================================

Features:
-----------

Now includes a very basic AI vs AI scene

Added a SetPatrolPoints method to the Patrol state in the form of void SetPatrolPoints(Transform pointsParent)


Improvements:
-----------

Exposed health to the inspector

Added a Change To Tag state

Now, no logic will execute if the time scale is 0


Changes:
-----------

Low Health Trigger now triggers if health is Less Than or Equal to instead of just Less Than
- most of the time it's used for detecting if the AI died, so naturally a person will probably want to put 0 and not 1

Added a movement call to the GotHit state for the AI to move to its' current position, effectively stopping it



=====================================================
Version 1.3.1
=====================================================

Fixes:
-----------

Now creates GUI Styles in the OnEnable method instead of in the declaration since it breaks the GUI in Unity 4

Fixed a bug where the AI wouldn't rotate when using a 3rd Party nav system



=====================================================
Version 1.3
=====================================================

Features:
-----------

Added an all new, easily expandable system where a developer can add new states and triggers easily.

Added an advanced mode so a user can have a basic view or an advanced view while editting.

Added the ability to have multiple instances of any state type.

The current state for the AI is now hilighted green in the editor.

Added a new SpeedExceeded trigger.

Added a new GoToRandomState trigger.

Added KeyUp and KeyDown triggers.


Improvements:
-----------

Added up, down, add and remove button styles.

Added reordering and removal of states.

Added a plus button to add new states to an AI.

Triggers are now seperate classes instead of being embedded into the BaseState class.

Added an InspectorHelper code file that new states and triggers will use by default when creating a new state or trigger from its' skeleton class, respectively.

Updated the GetHelpState to use the other AI's y position for pathfinding.

Implemented generic and type based GetState(s) methods.

Added spacing to make drawing the triggers look better.

Added a new property to the SeekState, destroyTargetWhenReached which will destroy the target that the fsm is seeking when it is reached.

Added ChangeActiveStateByIndex and ChangeActiveStateByName methods.


Bugs Fixes:
-----------

Fixed a bug in the Timer Trigger where it was always returning true.

Updated the vision cone to react and draw properly. It used to be twice the size that it should have been.

Fixed a potential bug that could occur when calling ChangeState if the state passed was null.

The IdleState now has the ai correctly rotated in the direction they entered the idle state in.

Updated the Ranged Attack scene as it wasn't working properly before.


Changes:
-----------

Set the default value of the cooldown time to be 0.

Got rid of the intermediate class StateMachineData.

RangedAttackState and MeleeAttackState are now just instances of AttackState (Do Not Use the RangedAttackState or MeleeAttackState components as they will be removed in a future release).

HealState and SeekAmmoState are now instances of SeekState (Do Not Use the HealState or SeekAmmoState components as they will be removed in a future release).

Renamed SetStates to ReplaceAllStates.

Removed the State enumeration as it's now mostly useless.

Removed a lot of unused code and variables.



=====================================================
Version 1.2.1
=====================================================


Features:
-----------

Added the ability to implement 3rd party path finding systems.

Updated menu to have a non Nav Mesh setup option in case the user decides to use a 3rd party system. Labeled as "AI Behaviors Setup (No Nav Mesh Agent)".



Improvements:
-----------

Removed the use of System.Reflection from the runtime code to allow for code stripping on mobile devices.

Renamed the general property "Raycast Layers" to "Visual Obstruction Layers" and added a tooltip for it because it was confusing.

Updated the GUI layout of the FleeState fleeTargetTag to be more consistent with the rest of the layout.

Made getting the current state public.



Bugs Fixes:
-----------

Fixed a bug where the animation from the attack slider in the editor would cause the animations to jitter if the attack state was selected.

Fixed the Patrol state's Ping Pong mode since it wasn't working.

Fixed a bug where the attack states weren't using the attack point variable.



Changes:
-----------

Changed SeekItemsState to be called SeekStateBase and made it abstract.

There is no more health field component selection since it was using System.Reflection in the runtime.

Removed Character Stats script since it's no longer needed.
